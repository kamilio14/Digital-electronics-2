
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009bb  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006eb  00000000  00000000  00000c2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000034b  00000000  00000000  00001316  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00001664  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000407  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000092  00000000  00000000  00001b13  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001ba5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e3       	ldi	r30, 0x3C	; 60
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 76 00 	call	0xec	; 0xec <main>
  8e:	0c 94 9c 00 	jmp	0x138	; 0x138 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <GPIO_config_output>:
/*--------------------------------------------------------------------*/
void GPIO_config_input_nopullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
	*reg_name++;							 // Change pointer to Data Register
	*reg_name = *reg_name & ~ (1<<pin_num);   // Data Register
  96:	fc 01       	movw	r30, r24
  98:	40 81       	ld	r20, Z
  9a:	21 e0       	ldi	r18, 0x01	; 1
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <GPIO_config_output+0xe>
  a0:	22 0f       	add	r18, r18
  a2:	33 1f       	adc	r19, r19
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <GPIO_config_output+0xa>
  a8:	24 2b       	or	r18, r20
  aa:	20 83       	st	Z, r18
  ac:	08 95       	ret

000000ae <GPIO_config_input_pullup>:
}


void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
  ae:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
  b0:	80 81       	ld	r24, Z
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	02 c0       	rjmp	.+4      	; 0xbc <GPIO_config_input_pullup+0xe>
  b8:	22 0f       	add	r18, r18
  ba:	33 1f       	adc	r19, r19
  bc:	6a 95       	dec	r22
  be:	e2 f7       	brpl	.-8      	; 0xb8 <GPIO_config_input_pullup+0xa>
  c0:	92 2f       	mov	r25, r18
  c2:	90 95       	com	r25
  c4:	89 23       	and	r24, r25
  c6:	80 83       	st	Z, r24
    *reg_name++;							 // Change pointer to Data Register
  c8:	80 81       	ld	r24, Z
    *reg_name = *reg_name | (1<<pin_num);   // Data Register
  ca:	81 81       	ldd	r24, Z+1	; 0x01
  cc:	28 2b       	or	r18, r24
  ce:	21 83       	std	Z+1, r18	; 0x01
  d0:	08 95       	ret

000000d2 <GPIO_write_low>:
}

/*--------------------------------------------------------------------*/
void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
  d2:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);
  d4:	90 81       	ld	r25, Z
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	02 c0       	rjmp	.+4      	; 0xe0 <GPIO_write_low+0xe>
  dc:	22 0f       	add	r18, r18
  de:	33 1f       	adc	r19, r19
  e0:	6a 95       	dec	r22
  e2:	e2 f7       	brpl	.-8      	; 0xdc <GPIO_write_low+0xa>
  e4:	20 95       	com	r18
  e6:	29 23       	and	r18, r25
  e8:	20 83       	st	Z, r18
  ea:	08 95       	ret

000000ec <main>:
	
	int main(void)
	{ 
		
		
		GPIO_config_output(&DDRC,LED );
  ec:	60 e0       	ldi	r22, 0x00	; 0
  ee:	87 e2       	ldi	r24, 0x27	; 39
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 4b 00 	call	0x96	; 0x96 <GPIO_config_output>
		GPIO_write_low(&PORTC,LED);
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	88 e2       	ldi	r24, 0x28	; 40
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 69 00 	call	0xd2	; 0xd2 <GPIO_write_low>
		
		//GPIO_config_input_pullup(&DDRD,First_row);
		GPIO_config_input_pullup(&DDRD,Second_row);
 100:	61 e0       	ldi	r22, 0x01	; 1
 102:	8a e2       	ldi	r24, 0x2A	; 42
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 57 00 	call	0xae	; 0xae <GPIO_config_input_pullup>
		GPIO_config_input_pullup(&DDRD,Third_row);
 10a:	62 e0       	ldi	r22, 0x02	; 2
 10c:	8a e2       	ldi	r24, 0x2A	; 42
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 57 00 	call	0xae	; 0xae <GPIO_config_input_pullup>
		GPIO_config_input_pullup(&DDRD,Fourth_row);
 114:	63 e0       	ldi	r22, 0x03	; 3
 116:	8a e2       	ldi	r24, 0x2A	; 42
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 57 00 	call	0xae	; 0xae <GPIO_config_input_pullup>
		
		//GPIO_config_input_pullup(&DDRD,First_column);
		GPIO_config_input_pullup(&DDRD,Second_column);
 11e:	65 e0       	ldi	r22, 0x05	; 5
 120:	8a e2       	ldi	r24, 0x2A	; 42
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 57 00 	call	0xae	; 0xae <GPIO_config_input_pullup>
		GPIO_config_input_pullup(&DDRD,Third_column);
 128:	66 e0       	ldi	r22, 0x06	; 6
 12a:	8a e2       	ldi	r24, 0x2A	; 42
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 57 00 	call	0xae	; 0xae <GPIO_config_input_pullup>
		return 0;
		
		
		
		
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	08 95       	ret

00000138 <_exit>:
 138:	f8 94       	cli

0000013a <__stop_program>:
 13a:	ff cf       	rjmp	.-2      	; 0x13a <__stop_program>
