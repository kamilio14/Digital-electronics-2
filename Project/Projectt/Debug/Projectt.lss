
Projectt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000258  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000204  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000258  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000288  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b92  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006dc  00000000  00000000  00000eca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a3  00000000  00000000  000015a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  0000194c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fe  00000000  00000000  000019f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000092  00000000  00000000  00001df2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001e84  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a0 30       	cpi	r26, 0x00	; 0
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 88 00 	call	0x110	; 0x110 <main>
  88:	0c 94 00 01 	jmp	0x200	; 0x200 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <GPIO_config_output>:
}

/*--------------------------------------------------------------------*/
void GPIO_toggle(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name ^ (1<<pin_num);
  90:	fc 01       	movw	r30, r24
  92:	40 81       	ld	r20, Z
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	02 c0       	rjmp	.+4      	; 0x9e <GPIO_config_output+0xe>
  9a:	22 0f       	add	r18, r18
  9c:	33 1f       	adc	r19, r19
  9e:	6a 95       	dec	r22
  a0:	e2 f7       	brpl	.-8      	; 0x9a <GPIO_config_output+0xa>
  a2:	24 2b       	or	r18, r20
  a4:	20 83       	st	Z, r18
  a6:	08 95       	ret

000000a8 <GPIO_config_input_nopull>:
  a8:	fc 01       	movw	r30, r24
  aa:	80 81       	ld	r24, Z
  ac:	21 e0       	ldi	r18, 0x01	; 1
  ae:	30 e0       	ldi	r19, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <GPIO_config_input_nopull+0xe>
  b2:	22 0f       	add	r18, r18
  b4:	33 1f       	adc	r19, r19
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <GPIO_config_input_nopull+0xa>
  ba:	20 95       	com	r18
  bc:	82 23       	and	r24, r18
  be:	80 83       	st	Z, r24
  c0:	80 81       	ld	r24, Z
  c2:	81 81       	ldd	r24, Z+1	; 0x01
  c4:	28 23       	and	r18, r24
  c6:	21 83       	std	Z+1, r18	; 0x01
  c8:	08 95       	ret

000000ca <GPIO_write_low>:
  ca:	fc 01       	movw	r30, r24
  cc:	90 81       	ld	r25, Z
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <GPIO_write_low+0xe>
  d4:	22 0f       	add	r18, r18
  d6:	33 1f       	adc	r19, r19
  d8:	6a 95       	dec	r22
  da:	e2 f7       	brpl	.-8      	; 0xd4 <GPIO_write_low+0xa>
  dc:	20 95       	com	r18
  de:	29 23       	and	r18, r25
  e0:	20 83       	st	Z, r18
  e2:	08 95       	ret

000000e4 <GPIO_write_high>:
  e4:	fc 01       	movw	r30, r24
  e6:	40 81       	ld	r20, Z
  e8:	21 e0       	ldi	r18, 0x01	; 1
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <GPIO_write_high+0xe>
  ee:	22 0f       	add	r18, r18
  f0:	33 1f       	adc	r19, r19
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <GPIO_write_high+0xa>
  f6:	24 2b       	or	r18, r20
  f8:	20 83       	st	Z, r18
  fa:	08 95       	ret

000000fc <GPIO_read>:
}

/*--------------------------------------------------------------------*/
uint8_t GPIO_read(volatile uint8_t *reg_name, uint8_t pin_num)
{
	if(bit_is_clear(*reg_name, pin_num))
  fc:	fc 01       	movw	r30, r24
  fe:	80 81       	ld	r24, Z
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <GPIO_read+0xc>
 104:	95 95       	asr	r25
 106:	87 95       	ror	r24
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <GPIO_read+0x8>
	}
	else
	{
		return 1;
	}
 10c:	81 70       	andi	r24, 0x01	; 1
 10e:	08 95       	ret

00000110 <main>:
#define Ledd		PC5


int main(void)
{
	GPIO_config_input_nopull(&DDRD, KEYPAD0);
 110:	60 e0       	ldi	r22, 0x00	; 0
 112:	8a e2       	ldi	r24, 0x2A	; 42
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	0e 94 54 00 	call	0xa8	; 0xa8 <GPIO_config_input_nopull>
	GPIO_config_input_nopull(&DDRD, KEYPAD1);
 11a:	61 e0       	ldi	r22, 0x01	; 1
 11c:	8a e2       	ldi	r24, 0x2A	; 42
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 54 00 	call	0xa8	; 0xa8 <GPIO_config_input_nopull>
	GPIO_config_input_nopull(&DDRD, KEYPAD2);
 124:	62 e0       	ldi	r22, 0x02	; 2
 126:	8a e2       	ldi	r24, 0x2A	; 42
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0e 94 54 00 	call	0xa8	; 0xa8 <GPIO_config_input_nopull>
	
	
	GPIO_config_output(&DDRD, KEYPAD3);
 12e:	63 e0       	ldi	r22, 0x03	; 3
 130:	8a e2       	ldi	r24, 0x2A	; 42
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 48 00 	call	0x90	; 0x90 <GPIO_config_output>
	GPIO_config_output(&DDRD, KEYPAD4);
 138:	64 e0       	ldi	r22, 0x04	; 4
 13a:	8a e2       	ldi	r24, 0x2A	; 42
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 48 00 	call	0x90	; 0x90 <GPIO_config_output>
	GPIO_config_output(&DDRD, KEYPAD5);
 142:	65 e0       	ldi	r22, 0x05	; 5
 144:	8a e2       	ldi	r24, 0x2A	; 42
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 48 00 	call	0x90	; 0x90 <GPIO_config_output>
	GPIO_config_output(&DDRD, KEYPAD6);
 14c:	66 e0       	ldi	r22, 0x06	; 6
 14e:	8a e2       	ldi	r24, 0x2A	; 42
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 48 00 	call	0x90	; 0x90 <GPIO_config_output>
	
	GPIO_config_output(&DDRC, Led); 
 156:	66 e0       	ldi	r22, 0x06	; 6
 158:	87 e2       	ldi	r24, 0x27	; 39
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	0e 94 48 00 	call	0x90	; 0x90 <GPIO_config_output>
	GPIO_write_low(&PORTC, Led);
 160:	66 e0       	ldi	r22, 0x06	; 6
 162:	88 e2       	ldi	r24, 0x28	; 40
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>

	GPIO_config_output(&DDRC, Ledd);
 16a:	65 e0       	ldi	r22, 0x05	; 5
 16c:	87 e2       	ldi	r24, 0x27	; 39
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 48 00 	call	0x90	; 0x90 <GPIO_config_output>
	GPIO_write_low(&PORTC, Ledd);
 174:	65 e0       	ldi	r22, 0x05	; 5
 176:	88 e2       	ldi	r24, 0x28	; 40
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>
	
	
while(1)
{
	GPIO_write_low(&PORTD, KEYPAD3);
 17e:	63 e0       	ldi	r22, 0x03	; 3
 180:	8b e2       	ldi	r24, 0x2B	; 43
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>
	GPIO_write_low(&PORTD, KEYPAD4);
 188:	64 e0       	ldi	r22, 0x04	; 4
 18a:	8b e2       	ldi	r24, 0x2B	; 43
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>
	GPIO_write_high(&PORTD, KEYPAD5);
 192:	65 e0       	ldi	r22, 0x05	; 5
 194:	8b e2       	ldi	r24, 0x2B	; 43
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	0e 94 72 00 	call	0xe4	; 0xe4 <GPIO_write_high>
	GPIO_write_low(&PORTD, KEYPAD6);
 19c:	66 e0       	ldi	r22, 0x06	; 6
 19e:	8b e2       	ldi	r24, 0x2B	; 43
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>
	if (GPIO_read(&PIND, KEYPAD0) == 1)
 1a6:	60 e0       	ldi	r22, 0x00	; 0
 1a8:	89 e2       	ldi	r24, 0x29	; 41
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 7e 00 	call	0xfc	; 0xfc <GPIO_read>
 1b0:	81 30       	cpi	r24, 0x01	; 1
 1b2:	29 f4       	brne	.+10     	; 0x1be <main+0xae>
	{
		GPIO_write_high(&PINC, Led);
 1b4:	66 e0       	ldi	r22, 0x06	; 6
 1b6:	86 e2       	ldi	r24, 0x26	; 38
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 72 00 	call	0xe4	; 0xe4 <GPIO_write_high>
	}
	
	
	GPIO_write_low(&PORTD, KEYPAD3);
 1be:	63 e0       	ldi	r22, 0x03	; 3
 1c0:	8b e2       	ldi	r24, 0x2B	; 43
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>
	GPIO_write_high(&PORTD, KEYPAD4);
 1c8:	64 e0       	ldi	r22, 0x04	; 4
 1ca:	8b e2       	ldi	r24, 0x2B	; 43
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 72 00 	call	0xe4	; 0xe4 <GPIO_write_high>
	GPIO_write_low(&PORTD, KEYPAD5);
 1d2:	65 e0       	ldi	r22, 0x05	; 5
 1d4:	8b e2       	ldi	r24, 0x2B	; 43
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>
	GPIO_write_low(&PORTD, KEYPAD6);
 1dc:	66 e0       	ldi	r22, 0x06	; 6
 1de:	8b e2       	ldi	r24, 0x2B	; 43
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 65 00 	call	0xca	; 0xca <GPIO_write_low>
	
	if (GPIO_read(&PIND, KEYPAD1) == 1)
 1e6:	61 e0       	ldi	r22, 0x01	; 1
 1e8:	89 e2       	ldi	r24, 0x29	; 41
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0e 94 7e 00 	call	0xfc	; 0xfc <GPIO_read>
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	29 f6       	brne	.-118    	; 0x17e <main+0x6e>
	{
		GPIO_write_high(&PINC, Ledd);
 1f4:	65 e0       	ldi	r22, 0x05	; 5
 1f6:	86 e2       	ldi	r24, 0x26	; 38
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	0e 94 72 00 	call	0xe4	; 0xe4 <GPIO_write_high>
 1fe:	bf cf       	rjmp	.-130    	; 0x17e <main+0x6e>

00000200 <_exit>:
 200:	f8 94       	cli

00000202 <__stop_program>:
 202:	ff cf       	rjmp	.-2      	; 0x202 <__stop_program>
