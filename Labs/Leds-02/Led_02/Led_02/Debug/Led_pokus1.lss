
Led_pokus1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000210  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000094f  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b1  00000000  00000000  00000c43  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003cf  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000016c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003bf  00000000  00000000  000016e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000328  00000000  00000000  00001aa7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001dcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 06 01 	jmp	0x20c	; 0x20c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
{
	int btn_memory = 0; // turnig off and on leds
	
	
    // LED 0
    DDRB = DDRB | (1<<LED_GREEN0);
  80:	20 9a       	sbi	0x04, 0	; 4
    PORTB = PORTB & ~(1<<LED_GREEN0);
  82:	28 98       	cbi	0x05, 0	; 5
	
	// LED 1 
	DDRB = DDRB | (1<<LED_GREEN1);
  84:	21 9a       	sbi	0x04, 1	; 4
	PORTB = PORTB & ~(1<<LED_GREEN1);
  86:	29 98       	cbi	0x05, 1	; 5

	// LED 2
	DDRB = DDRB | (1<<LED_GREEN2);
  88:	22 9a       	sbi	0x04, 2	; 4
	PORTB = PORTB & ~(1<<LED_GREEN2);
  8a:	2a 98       	cbi	0x05, 2	; 5

	// LED 3
	DDRB = DDRB | (1<<LED_GREEN3);
  8c:	23 9a       	sbi	0x04, 3	; 4
	PORTB = PORTB & ~(1<<LED_GREEN3);
  8e:	2b 98       	cbi	0x05, 3	; 5

	// LED 4
	DDRB = DDRB | (1<<LED_GREEN4);
  90:	24 9a       	sbi	0x04, 4	; 4
	PORTB = PORTB & ~(1<<LED_GREEN4);
  92:	2c 98       	cbi	0x05, 4	; 5

	//BUTTON
	
	DDRD = DDRD & ~(1<<BTN);
  94:	50 98       	cbi	0x0a, 0	; 10
	PORTD = PORTD | (1<<BTN);
  96:	58 9a       	sbi	0x0b, 0	; 11
	
   //button led
   DDRC = DDRC | (1<<BUTTON_LED); 
  98:	39 9a       	sbi	0x07, 1	; 7
   PORTC = PORTC & ~(1<<BUTTON_LED);
  9a:	41 98       	cbi	0x08, 1	; 8
 * Main function where the program execution begins. Toggle two LEDs 
 * when a push button is pressed.
 */
int main(void)
{
	int btn_memory = 0; // turnig off and on leds
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	90 e0       	ldi	r25, 0x00	; 0
			}
		}
		
		if (btn_memory == 1)
		{	
			PORTB = PORTB ^ (1<<LED_GREEN0);  // Turning on Led0
  a0:	51 e0       	ldi	r21, 0x01	; 1
			_delay_ms(BLINK_DELAY);
			
			PORTB = PORTB ^ (1<<LED_GREEN0);  // Turning off Led0
			PORTB = PORTB ^ (1<<LED_GREEN1);  // Turning on  Led1
  a2:	22 e0       	ldi	r18, 0x02	; 2
			_delay_ms(BLINK_DELAY);
				
			PORTB = PORTB ^ (1<<LED_GREEN1);  // Turning off Led1
			PORTB = PORTB ^ (1<<LED_GREEN2);  // Turning on  Led2
  a4:	44 e0       	ldi	r20, 0x04	; 4
			_delay_ms(BLINK_DELAY);
				
			PORTB = PORTB ^ (1<<LED_GREEN2);  // Turning off Led2
			PORTB = PORTB ^ (1<<LED_GREEN3);  // Turning on  Led3
  a6:	38 e0       	ldi	r19, 0x08	; 8
			_delay_ms(BLINK_DELAY);
				
			PORTB = PORTB ^ (1<<LED_GREEN3);  // Turning off Led3
			PORTB = PORTB ^ (1<<LED_GREEN4);  // Turning on  Led4
  a8:	60 e1       	ldi	r22, 0x10	; 16
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  aa:	e1 e0       	ldi	r30, 0x01	; 1
  ac:	70 e0       	ldi	r23, 0x00	; 0
			if (btn_memory == 0)
			{
				btn_memory = 1;  // turning on
				PORTC = PORTC ^ (1<<BUTTON_LED);  // Turning on button led to see if it works
			}else{
				btn_memory = 0;
  ae:	a0 e0       	ldi	r26, 0x00	; 0
  b0:	f0 e0       	ldi	r31, 0x00	; 0
   
    // Infinite loop
    while (1)
	{

		if (bit_is_clear(PIND, BTN))
  b2:	48 99       	sbic	0x09, 0	; 9
  b4:	15 c0       	rjmp	.+42     	; 0xe0 <main+0x60>
		{
			if (btn_memory == 0)
  b6:	89 2b       	or	r24, r25
  b8:	21 f4       	brne	.+8      	; 0xc2 <main+0x42>
			{
				btn_memory = 1;  // turning on
				PORTC = PORTC ^ (1<<BUTTON_LED);  // Turning on button led to see if it works
  ba:	88 b1       	in	r24, 0x08	; 8
  bc:	82 27       	eor	r24, r18
  be:	88 b9       	out	0x08, r24	; 8
  c0:	12 c0       	rjmp	.+36     	; 0xe6 <main+0x66>
			}else{
				btn_memory = 0;
				PORTC = PORTC ^ (1<<BUTTON_LED);  // Turning off button led
  c2:	88 b1       	in	r24, 0x08	; 8
  c4:	82 27       	eor	r24, r18
  c6:	88 b9       	out	0x08, r24	; 8
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	93 e2       	ldi	r25, 0x23	; 35
  cc:	b4 ef       	ldi	r27, 0xF4	; 244
  ce:	81 50       	subi	r24, 0x01	; 1
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	b0 40       	sbci	r27, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x4e>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x58>
  d8:	00 00       	nop
			if (btn_memory == 0)
			{
				btn_memory = 1;  // turning on
				PORTC = PORTC ^ (1<<BUTTON_LED);  // Turning on button led to see if it works
			}else{
				btn_memory = 0;
  da:	8a 2f       	mov	r24, r26
  dc:	9f 2f       	mov	r25, r31
  de:	e9 cf       	rjmp	.-46     	; 0xb2 <main+0x32>
				PORTC = PORTC ^ (1<<BUTTON_LED);  // Turning off button led
				_delay_ms(5000); // Time for turning off button 
			}
		}
		
		if (btn_memory == 1)
  e0:	81 30       	cpi	r24, 0x01	; 1
  e2:	91 05       	cpc	r25, r1
  e4:	31 f7       	brne	.-52     	; 0xb2 <main+0x32>
		{	
			PORTB = PORTB ^ (1<<LED_GREEN0);  // Turning on Led0
  e6:	85 b1       	in	r24, 0x05	; 5
  e8:	85 27       	eor	r24, r21
  ea:	85 b9       	out	0x05, r24	; 5
  ec:	8f ef       	ldi	r24, 0xFF	; 255
  ee:	99 e6       	ldi	r25, 0x69	; 105
  f0:	b8 e1       	ldi	r27, 0x18	; 24
  f2:	81 50       	subi	r24, 0x01	; 1
  f4:	90 40       	sbci	r25, 0x00	; 0
  f6:	b0 40       	sbci	r27, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x72>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x7c>
  fc:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			
			PORTB = PORTB ^ (1<<LED_GREEN0);  // Turning off Led0
  fe:	85 b1       	in	r24, 0x05	; 5
 100:	85 27       	eor	r24, r21
 102:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN1);  // Turning on  Led1
 104:	85 b1       	in	r24, 0x05	; 5
 106:	82 27       	eor	r24, r18
 108:	85 b9       	out	0x05, r24	; 5
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	99 e6       	ldi	r25, 0x69	; 105
 10e:	b8 e1       	ldi	r27, 0x18	; 24
 110:	81 50       	subi	r24, 0x01	; 1
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	b0 40       	sbci	r27, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <main+0x90>
 118:	00 c0       	rjmp	.+0      	; 0x11a <main+0x9a>
 11a:	00 00       	nop
			_delay_ms(BLINK_DELAY);
				
			PORTB = PORTB ^ (1<<LED_GREEN1);  // Turning off Led1
 11c:	85 b1       	in	r24, 0x05	; 5
 11e:	82 27       	eor	r24, r18
 120:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN2);  // Turning on  Led2
 122:	85 b1       	in	r24, 0x05	; 5
 124:	84 27       	eor	r24, r20
 126:	85 b9       	out	0x05, r24	; 5
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	99 e6       	ldi	r25, 0x69	; 105
 12c:	b8 e1       	ldi	r27, 0x18	; 24
 12e:	81 50       	subi	r24, 0x01	; 1
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	b0 40       	sbci	r27, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <main+0xae>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0xb8>
 138:	00 00       	nop
			_delay_ms(BLINK_DELAY);
				
			PORTB = PORTB ^ (1<<LED_GREEN2);  // Turning off Led2
 13a:	85 b1       	in	r24, 0x05	; 5
 13c:	84 27       	eor	r24, r20
 13e:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN3);  // Turning on  Led3
 140:	85 b1       	in	r24, 0x05	; 5
 142:	83 27       	eor	r24, r19
 144:	85 b9       	out	0x05, r24	; 5
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	99 e6       	ldi	r25, 0x69	; 105
 14a:	b8 e1       	ldi	r27, 0x18	; 24
 14c:	81 50       	subi	r24, 0x01	; 1
 14e:	90 40       	sbci	r25, 0x00	; 0
 150:	b0 40       	sbci	r27, 0x00	; 0
 152:	e1 f7       	brne	.-8      	; 0x14c <main+0xcc>
 154:	00 c0       	rjmp	.+0      	; 0x156 <main+0xd6>
 156:	00 00       	nop
			_delay_ms(BLINK_DELAY);
				
			PORTB = PORTB ^ (1<<LED_GREEN3);  // Turning off Led3
 158:	85 b1       	in	r24, 0x05	; 5
 15a:	83 27       	eor	r24, r19
 15c:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN4);  // Turning on  Led4
 15e:	85 b1       	in	r24, 0x05	; 5
 160:	86 27       	eor	r24, r22
 162:	85 b9       	out	0x05, r24	; 5
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	99 e6       	ldi	r25, 0x69	; 105
 168:	b8 e1       	ldi	r27, 0x18	; 24
 16a:	81 50       	subi	r24, 0x01	; 1
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	b0 40       	sbci	r27, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <main+0xea>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0xf4>
 174:	00 00       	nop
			_delay_ms(BLINK_DELAY);
				
			PORTB = PORTB ^ (1<<LED_GREEN4);  // Turning off Led4
 176:	85 b1       	in	r24, 0x05	; 5
 178:	86 27       	eor	r24, r22
 17a:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN3);  // Turning on  Led3
 17c:	85 b1       	in	r24, 0x05	; 5
 17e:	83 27       	eor	r24, r19
 180:	85 b9       	out	0x05, r24	; 5
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	99 e6       	ldi	r25, 0x69	; 105
 186:	b8 e1       	ldi	r27, 0x18	; 24
 188:	81 50       	subi	r24, 0x01	; 1
 18a:	90 40       	sbci	r25, 0x00	; 0
 18c:	b0 40       	sbci	r27, 0x00	; 0
 18e:	e1 f7       	brne	.-8      	; 0x188 <main+0x108>
 190:	00 c0       	rjmp	.+0      	; 0x192 <main+0x112>
 192:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			
			PORTB = PORTB ^ (1<<LED_GREEN3);  // Turning off Led3
 194:	85 b1       	in	r24, 0x05	; 5
 196:	83 27       	eor	r24, r19
 198:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN2);  // Turning on  Led2
 19a:	85 b1       	in	r24, 0x05	; 5
 19c:	84 27       	eor	r24, r20
 19e:	85 b9       	out	0x05, r24	; 5
 1a0:	8f ef       	ldi	r24, 0xFF	; 255
 1a2:	99 e6       	ldi	r25, 0x69	; 105
 1a4:	b8 e1       	ldi	r27, 0x18	; 24
 1a6:	81 50       	subi	r24, 0x01	; 1
 1a8:	90 40       	sbci	r25, 0x00	; 0
 1aa:	b0 40       	sbci	r27, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x126>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x130>
 1b0:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			
			PORTB = PORTB ^ (1<<LED_GREEN2);  // Turning off Led2
 1b2:	85 b1       	in	r24, 0x05	; 5
 1b4:	84 27       	eor	r24, r20
 1b6:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN1);  // Turning on  Led1
 1b8:	85 b1       	in	r24, 0x05	; 5
 1ba:	82 27       	eor	r24, r18
 1bc:	85 b9       	out	0x05, r24	; 5
 1be:	8f ef       	ldi	r24, 0xFF	; 255
 1c0:	99 e6       	ldi	r25, 0x69	; 105
 1c2:	b8 e1       	ldi	r27, 0x18	; 24
 1c4:	81 50       	subi	r24, 0x01	; 1
 1c6:	90 40       	sbci	r25, 0x00	; 0
 1c8:	b0 40       	sbci	r27, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <main+0x144>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <main+0x14e>
 1ce:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			
			PORTB = PORTB ^ (1<<LED_GREEN1);  // Turning off Led1
 1d0:	85 b1       	in	r24, 0x05	; 5
 1d2:	82 27       	eor	r24, r18
 1d4:	85 b9       	out	0x05, r24	; 5
			PORTB = PORTB ^ (1<<LED_GREEN0);  // Turning on  Led0
 1d6:	85 b1       	in	r24, 0x05	; 5
 1d8:	85 27       	eor	r24, r21
 1da:	85 b9       	out	0x05, r24	; 5
 1dc:	8f ef       	ldi	r24, 0xFF	; 255
 1de:	99 e6       	ldi	r25, 0x69	; 105
 1e0:	b8 e1       	ldi	r27, 0x18	; 24
 1e2:	81 50       	subi	r24, 0x01	; 1
 1e4:	90 40       	sbci	r25, 0x00	; 0
 1e6:	b0 40       	sbci	r27, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <main+0x162>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <main+0x16c>
 1ec:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			
			PORTB = PORTB ^ (1<<LED_GREEN0);  // Turning on  Led0
 1ee:	85 b1       	in	r24, 0x05	; 5
 1f0:	85 27       	eor	r24, r21
 1f2:	85 b9       	out	0x05, r24	; 5
 1f4:	8f ef       	ldi	r24, 0xFF	; 255
 1f6:	99 e6       	ldi	r25, 0x69	; 105
 1f8:	b8 e1       	ldi	r27, 0x18	; 24
 1fa:	81 50       	subi	r24, 0x01	; 1
 1fc:	90 40       	sbci	r25, 0x00	; 0
 1fe:	b0 40       	sbci	r27, 0x00	; 0
 200:	e1 f7       	brne	.-8      	; 0x1fa <main+0x17a>
 202:	00 c0       	rjmp	.+0      	; 0x204 <main+0x184>
 204:	00 00       	nop
 206:	8e 2f       	mov	r24, r30
 208:	97 2f       	mov	r25, r23
 20a:	53 cf       	rjmp	.-346    	; 0xb2 <main+0x32>

0000020c <_exit>:
 20c:	f8 94       	cli

0000020e <__stop_program>:
 20e:	ff cf       	rjmp	.-2      	; 0x20e <__stop_program>
